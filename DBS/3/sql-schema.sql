DROP TABLE IF EXISTS Employee;
DROP TABLE IF EXISTS Position;
DROP TABLE IF EXISTS Address;
DROP TABLE IF EXISTS Boss;
DROP TABLE IF EXISTS Nurse;
DROP TABLE IF EXISTS Doctor;
DROP TABLE IF EXISTS Department;
DROP TABLE IF EXISTS Patient;
DROP TABLE IF EXISTS Phone;
DROP TABLE IF EXISTS Insurance;
DROP TABLE IF EXISTS Block;
DROP TABLE IF EXISTS Room;
DROP TABLE IF EXISTS Stay;
DROP TABLE IF EXISTS Examination;
DROP TABLE IF EXISTS Diagnosis;
DROP TABLE IF EXISTS Diagnosing;

CREATE TABLE Employee(
	id INTEGER PRIMARY KEY,
	name VARCHAR(100) NOT NULL
);

CREATE TABLE Position(
	employee INTEGER REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	position VARCHAR(50),
	PRIMARY KEY(employee, position)
);

CREATE TABLE Address(
	employee INTEGER REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	street VARCHAR(100),
	city VARCHAR(50),
	zipСode CHAR(6),
	PRIMARY KEY(employee, street, city, zipСode)
);

CREATE TABLE Boss(
	employee INTEGER PRIMARY KEY REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	superior INTEGER NOT NULL REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Block(
	code INTEGER PRIMARY KEY,
	floor INTEGER NOT NULL
);

CREATE TABLE Department(
	code CHAR(3) PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE,
	head INTEGER REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Nurse(
	id INTEGER PRIMARY KEY REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	block INTEGER REFERENCES Block(code) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Doctor(
	id INTEGER PRIMARY KEY REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	department CHAR(3) REFERENCES Department(code) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE Patient(
	id INTEGER PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	dateOfBirth DATE NOT NULL,
	bloodType VARCHAR(2) NOT NULL
	CONSTRAINT check_blood_type CHECK (bloodType IN ('AB', 'A', 'B', '0'))
);

CREATE TABLE Phone(
	patient INTEGER NOT NULL REFERENCES Patient(id) ON UPDATE CASCADE ON DELETE CASCADE, 
	phone CHAR(9) NOT NULL,
	PRIMARY KEY (patient, phone)
);
	
CREATE TABLE Insurance(
	patient INTEGER PRIMARY KEY REFERENCES Patient(id) ON UPDATE CASCADE ON DELETE CASCADE,  
	insuranceID INTEGER NOT NULL
);
	

CREATE TABLE Room(
	block INTEGER NOT NULL REFERENCES Block(code) ON UPDATE CASCADE ON DELETE CASCADE,
	number INTEGER NOT NULL,
	type VARCHAR(10) NOT NULL,
	PRIMARY KEY(block, number)
);

CREATE TABLE Stay(
	patient INTEGER NOT NULL REFERENCES Patient(id) ON UPDATE CASCADE ON DELETE CASCADE, 
	fromDate DATE NOT NULL,
	toDate DATE,
	block INTEGER NOT NULL,
	room INTEGER NOT NULL,
	PRIMARY KEY(patient, fromDate),
	CONSTRAINT stay_room FOREIGN KEY(block, room) REFERENCES Room(block, number) ON UPDATE CASCADE ON DELETE CASCADE
);
	
CREATE TABLE Examination(
	timestamp TIMESTAMP NOT NULL,
	examinationRoom INTEGER NOT NULL,
	doctor INTEGER NOT NULL REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	patient INTEGER NOT NULL REFERENCES Patient(id) ON UPDATE CASCADE ON DELETE CASCADE,
	nurse INTEGER REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	PRIMARY KEY(timestamp, examinationRoom)
);

CREATE TABLE Diagnosis(
	code VARCHAR(6) PRIMARY KEY,
	name VARCHAR(50) NOT NULL UNIQUE
);
	
CREATE TABLE Diagnosing(
	patient INTEGER REFERENCES Patient(id) ON UPDATE CASCADE ON DELETE CASCADE,
	diagnosis VARCHAR(6) REFERENCES Diagnosis(code) ON UPDATE CASCADE ON DELETE CASCADE,
	doctor INTEGER REFERENCES Employee(id) ON UPDATE CASCADE ON DELETE CASCADE,
	diagnosingDate DATE,
	PRIMARY KEY(patient, diagnosis, doctor, diagnosingDate)
);